{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plant Disease Using Siamese Network - Keras"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will understand the siamese network by building the plant disease model. The objective of our network is to understand whether two plants are similar or dissimilar.\n",
    "\n",
    "Once we have our data as pairs along with their labels, we train our siamese network. From the image pair, we feed one image to the network A and another image to the network B. The role of these two networks is only to extract the feature vectors. So, we use two convolution layers with relu activations for extracting the features. Once we have learned the feature, we feed the resultant feature vector from both of the networks to the energy function which measures the similarity, we use Euclidean distance as our energy function. So, we train our network by feeding the image pair to learn the semantic similarity between them.\n",
    "\n",
    "**What is Siamese Neural Network?**\n",
    "\n",
    "Siamese Neural Network is a special type of neural network in first we train an image with a sequence of convolutional layers, pooling layers and fully connected layers we end up with a feature vector f(x1).\n",
    "Then we train another image in the same sequence to get another feature vector f(x2). Now we compute d which will be the distance between each of the points in feature vector f(x1) with the feature vector f(x2).\n",
    "If d is small we can tell both images are same else if d is large itâ€™s the other way round.\n",
    "\n",
    "![Fig 1: A Siamese Neural Network for Image Recognition](https://miro.medium.com/max/1068/1*V27gq7s7elBc8G52T8t1LQ.png)\n",
    "\n",
    "\n",
    "**One-shot Image Recognition**\n",
    "\n",
    "People may ask why have they used One-shot image recognition method though there are other state of art models like CNN and Hierarchical Bayesian Program Learning. The main reason for people using this method is the lack of data. The state of art Machine Learning Algorithms work very well when there is a huge amount of data but can fail miserably if there is a data scarcity.\n",
    "\n",
    "In this method the model must make the correct prediction given only one example in each class in the training set. In this paper however the author has used more than one example for each class but it is very less compared to what the state of art algorithm requires.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "References :\n",
    "* https://github.com/sudharsan13296/Hands-On-Meta-Learning-With-Python/blob/master/02.%20Face%20and%20Audio%20Recognition%20using%20Siamese%20Networks/2.4%20Face%20Recognition%20Using%20Siamese%20Network.ipynb\n",
    "* https://keras.io/examples/mnist_siamese/\n",
    "* https://msiam.github.io/Few-Shot-Learning/\n",
    "* https://towardsdatascience.com/one-shot-learning-with-siamese-networks-using-keras-17f34e75bb3d\n",
    "* https://medium.com/@subham.tiwari186/siamese-neural-network-for-one-shot-image-recognition-paper-analysis-44cf7f0c66cb\n",
    "* https://www.katnoria.com/siamese-one-shot/\n",
    "* https://sorenbouma.github.io/blog/oneshot/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:26.074372Z",
     "iopub.status.busy": "2024-08-08T02:49:26.073984Z",
     "iopub.status.idle": "2024-08-08T02:49:29.800412Z",
     "shell.execute_reply": "2024-08-08T02:49:29.799319Z",
     "shell.execute_reply.started": "2024-08-08T02:49:26.074317Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "import re\n",
    "import numpy as np\n",
    "from PIL import Image\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "from keras import backend as K\n",
    "from keras.layers import Activation\n",
    "from keras.layers import Input, Lambda, Dense, Dropout, Convolution2D, MaxPooling2D, Flatten\n",
    "from keras.models import Sequential, Model\n",
    "from keras.optimizers import RMSprop\n",
    "from keras import optimizers\n",
    "\n",
    "import matplotlib.image as mpimg \n",
    "import matplotlib.pyplot as plt \n",
    "\n",
    "from keras import callbacks\n",
    "from keras.callbacks import ModelCheckpoint, LearningRateScheduler, EarlyStopping, ReduceLROnPlateau, TensorBoard\n",
    "import os\n",
    "from keras.models import Model,load_model\n",
    "import json\n",
    "from keras.models import model_from_json, load_model\n",
    "from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:34.421738Z",
     "iopub.status.busy": "2024-08-08T02:49:34.421290Z",
     "iopub.status.idle": "2024-08-08T02:49:34.430360Z",
     "shell.execute_reply": "2024-08-08T02:49:34.429211Z",
     "shell.execute_reply.started": "2024-08-08T02:49:34.421659Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "../input/plantvillage/plantvillage_resize_224/PlantVillage_resize_224/\n"
     ]
    }
   ],
   "source": [
    "selected_image_size = 224\n",
    "resize = True\n",
    "total_sample_size = 10000 # 5k-50k\n",
    "\n",
    "channel = 1\n",
    "size = 2\n",
    "\n",
    "folder_count = 38\n",
    "image_count = 20 #0-50\n",
    "\n",
    "if resize == True:\n",
    "    batch_size=256\n",
    "else:\n",
    "    batch_size=64\n",
    "\n",
    "path =  os.path.join('../input/plantvillage/plantvillage_resize_224/PlantVillage_resize_224/')\n",
    "print(path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we define a function for reading our input image. The function read_image takes input as an image and returns the numpy array.\n",
    "These feat_vecs_a and feat_vecs_b are the feature vectors of our image pair. Next, we feed this feature vectors to the energy function to compute the distance between them, we use Euclidean distance as our energy function. Next, we define our loss function as contrastive_loss function and compile the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:35.252416Z",
     "iopub.status.busy": "2024-08-08T02:49:35.252031Z",
     "iopub.status.idle": "2024-08-08T02:49:35.269700Z",
     "shell.execute_reply": "2024-08-08T02:49:35.268576Z",
     "shell.execute_reply.started": "2024-08-08T02:49:35.252362Z"
    }
   },
   "outputs": [],
   "source": [
    "def read_image(filename, byteorder='>'):\n",
    "    \n",
    "    #first we read the image, as a raw file to the buffer\n",
    "    with open(filename, 'rb') as f:\n",
    "        buffer = f.read()\n",
    "    \n",
    "    #using regex, we extract the header, width, height and maxval of the image\n",
    "    header, width, height, maxval = re.search(\n",
    "        b\"(^P5\\s(?:\\s*#.*[\\r\\n])*\"\n",
    "        b\"(\\d+)\\s(?:\\s*#.*[\\r\\n])*\"\n",
    "        b\"(\\d+)\\s(?:\\s*#.*[\\r\\n])*\"\n",
    "        b\"(\\d+)\\s(?:\\s*#.*[\\r\\n]\\s)*)\", buffer).groups()\n",
    "    \n",
    "    #then we convert the image to numpy array using np.frombuffer which interprets buffer as one dimensional array\n",
    "    return np.frombuffer(buffer,\n",
    "                            dtype='u1' if int(maxval) < 256 else byteorder+'u2',\n",
    "                            count=int(width)*int(height),\n",
    "                            offset=len(header)\n",
    "                            ).reshape((int(height), int(width)))\n",
    "\n",
    "\n",
    "def euclidean_distance(vects):\n",
    "    x, y = vects\n",
    "    return K.sqrt(K.sum(K.square(x - y), axis=1, keepdims=True))\n",
    "\n",
    "\n",
    "def eucl_dist_output_shape(shapes):\n",
    "    shape1, shape2 = shapes\n",
    "    return (shape1[0], 1)\n",
    "\n",
    "def contrastive_loss(y_true, y_pred):\n",
    "    margin = 1\n",
    "    return K.mean(y_true * K.square(y_pred) + (1 - y_true) * K.square(K.maximum(margin - y_pred, 0)))\n",
    "\n",
    "def compute_accuracy(predictions, labels):\n",
    "    '''Compute classification accuracy with a fixed threshold on distances.\n",
    "    '''\n",
    "    return labels[predictions.ravel() < 0.5].mean()\n",
    "\n",
    "def accuracy(y_true, y_pred):\n",
    "    '''Compute classification accuracy with a fixed threshold on distances.\n",
    "    '''\n",
    "    return K.mean(K.equal(y_true, K.cast(y_pred < 0.5, y_true.dtype)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For an example, Let us open one image,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:35.934401Z",
     "iopub.status.busy": "2024-08-08T02:49:35.934022Z",
     "iopub.status.idle": "2024-08-08T02:49:36.007090Z",
     "shell.execute_reply": "2024-08-08T02:49:36.006065Z",
     "shell.execute_reply.started": "2024-08-08T02:49:35.934347Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<PIL.JpegImagePlugin.JpegImageFile image mode=L size=224x224 at 0x79CA28EEBA20>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Image.open(path+'s1/1.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:36.261020Z",
     "iopub.status.busy": "2024-08-08T02:49:36.260666Z",
     "iopub.status.idle": "2024-08-08T02:49:36.270938Z",
     "shell.execute_reply": "2024-08-08T02:49:36.269529Z",
     "shell.execute_reply.started": "2024-08-08T02:49:36.260969Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dim1 224\n",
      "dim2 224\n"
     ]
    }
   ],
   "source": [
    "image = mpimg.imread(path+'s1/1.jpg')\n",
    "dim1 = image.shape[0]\n",
    "print('dim1',dim1)\n",
    "dim2 = image.shape[1]\n",
    "print('dim2',dim2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:36.548314Z",
     "iopub.status.busy": "2024-08-08T02:49:36.547826Z",
     "iopub.status.idle": "2024-08-08T02:49:36.554706Z",
     "shell.execute_reply": "2024-08-08T02:49:36.553479Z",
     "shell.execute_reply.started": "2024-08-08T02:49:36.548193Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(224, 224)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "image.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we define another function get_data for generating our data. As we know, for the Siamese network, data should be in the form of pairs (genuine and imposite) with a binary label.\n",
    "\n",
    "First, we read the images (img1, img2) from the same directory and store them in the x_genuine_pair array and assign y_genuine to 1. Next, we read the images (img1, img2) from the different directory and store them in the x_imposite pair and assign y_imposite to 0.\n",
    "\n",
    "Finally, we concatenate both x_genuine_pair, x_imposite to X and y_genuine, y_imposite to Y:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# To prepare the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:49:37.535659Z",
     "iopub.status.busy": "2024-08-08T02:49:37.535288Z",
     "iopub.status.idle": "2024-08-08T02:51:19.559791Z",
     "shell.execute_reply": "2024-08-08T02:51:19.558588Z",
     "shell.execute_reply.started": "2024-08-08T02:49:37.535606Z"
    }
   },
   "outputs": [],
   "source": [
    "def get_data(size, total_sample_size):\n",
    "    #read the image\n",
    "    image = mpimg.imread(path+'s' + str(1) + '/' + str(1) + '.jpg', 'rw+')\n",
    "    #reduce the size\n",
    "    if resize == True:\n",
    "        image = image[::size, ::size]\n",
    "    #get the new size\n",
    "    dim1 = image.shape[0]\n",
    "    dim2 = image.shape[1]\n",
    "\n",
    "    count = 0\n",
    "\n",
    "    #initialize the numpy array with the shape of [total_sample, no_of_pairs, dim1, dim2]\n",
    "    x_geuine_pair = np.zeros([total_sample_size, 2, 1, dim1, dim2])\n",
    "\n",
    "    y_genuine = np.zeros([total_sample_size,1])\n",
    "\n",
    "    for i in range(folder_count):\n",
    "        for j in range(int(total_sample_size/folder_count)):\n",
    "            ind1 = 0\n",
    "            ind2 = 0\n",
    "\n",
    "            #read images from same directory (genuine pair)\n",
    "            while ind1 == ind2:\n",
    "                ind1 = np.random.randint(image_count)\n",
    "                ind2 = np.random.randint(image_count)\n",
    "\n",
    "            # read the two images\n",
    "            img1 = mpimg.imread(path+'s' + str(i+1) + '/' + str(ind1 + 1) + '.jpg', 'rw+')\n",
    "            img2 = mpimg.imread(path+'s' + str(i+1) + '/' + str(ind2 + 1) + '.jpg', 'rw+')\n",
    "\n",
    "            #reduce the size\n",
    "            if resize == True:\n",
    "                img1 = img1[::size, ::size]\n",
    "                img2 = img2[::size, ::size]\n",
    "\n",
    "            #store the images to the initialized numpy array\n",
    "            print\n",
    "            x_geuine_pair[count, 0, 0, :, :] = img1\n",
    "            x_geuine_pair[count, 1, 0, :, :] = img2\n",
    "\n",
    "            #as we are drawing images from the same directory we assign label as 1. (genuine pair)\n",
    "            y_genuine[count] = 1\n",
    "            count += 1\n",
    "\n",
    "    count = 0\n",
    "    x_imposite_pair = np.zeros([total_sample_size, 2, 1, dim1, dim2])\n",
    "    y_imposite = np.zeros([total_sample_size, 1])\n",
    "\n",
    "    for i in range(int(total_sample_size/image_count)):\n",
    "        for j in range(image_count):\n",
    "\n",
    "            #read images from different directory (imposite pair)\n",
    "            while True:\n",
    "                ind1 = np.random.randint(folder_count)\n",
    "                ind2 = np.random.randint(folder_count)\n",
    "                if ind1 != ind2:\n",
    "                    break\n",
    "\n",
    "            img1 = mpimg.imread(path+'s' + str(ind1+1) + '/' + str(j + 1) + '.jpg', 'rw+')\n",
    "            img2 = mpimg.imread(path+'s' + str(ind2+1) + '/' + str(j + 1) + '.jpg', 'rw+')\n",
    "\n",
    "            if resize == True:\n",
    "                img1 = img1[::size, ::size]\n",
    "                img2 = img2[::size, ::size]\n",
    "\n",
    "            x_imposite_pair[count, 0, 0, :, :] = img1\n",
    "            x_imposite_pair[count, 1, 0, :, :] = img2\n",
    "            #as we are drawing images from the different directory we assign label as 0. (imposite pair)\n",
    "            y_imposite[count] = 0\n",
    "            count += 1\n",
    "\n",
    "    #now, concatenate, genuine pairs and imposite pair to get the whole data\n",
    "    #print(x_geuine_pair.shape)\n",
    "    #print(x_imposite_pair.shape)\n",
    "    X = np.concatenate([x_geuine_pair, x_imposite_pair], axis=0)/255\n",
    "    Y = np.concatenate([y_genuine, y_imposite], axis=0)\n",
    "\n",
    "    return X, Y\n",
    "X, Y = get_data(size, total_sample_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "Now, we generate our data and check our data size. As you can see we have 20,000 data points, out of these 10,000 are genuine pairs and 10,000 are imposite pairs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:19.562644Z",
     "iopub.status.busy": "2024-08-08T02:51:19.562273Z",
     "iopub.status.idle": "2024-08-08T02:51:19.568616Z",
     "shell.execute_reply": "2024-08-08T02:51:19.567653Z",
     "shell.execute_reply.started": "2024-08-08T02:51:19.562580Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20000, 2, 1, 112, 112)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:19.570982Z",
     "iopub.status.busy": "2024-08-08T02:51:19.570539Z",
     "iopub.status.idle": "2024-08-08T02:51:19.586744Z",
     "shell.execute_reply": "2024-08-08T02:51:19.585700Z",
     "shell.execute_reply.started": "2024-08-08T02:51:19.570901Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(20000, 1)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:19.588781Z",
     "iopub.status.busy": "2024-08-08T02:51:19.588442Z",
     "iopub.status.idle": "2024-08-08T02:51:19.909916Z",
     "shell.execute_reply": "2024-08-08T02:51:19.908654Z",
     "shell.execute_reply.started": "2024-08-08T02:51:19.588722Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(Y[:,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we split our data for training and testing with 85% training and 15% testing proportions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:19.913378Z",
     "iopub.status.busy": "2024-08-08T02:51:19.913049Z",
     "iopub.status.idle": "2024-08-08T02:51:22.941512Z",
     "shell.execute_reply": "2024-08-08T02:51:22.940671Z",
     "shell.execute_reply.started": "2024-08-08T02:51:19.913329Z"
    }
   },
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=.15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:22.943782Z",
     "iopub.status.busy": "2024-08-08T02:51:22.943440Z",
     "iopub.status.idle": "2024-08-08T02:51:22.951419Z",
     "shell.execute_reply": "2024-08-08T02:51:22.950300Z",
     "shell.execute_reply.started": "2024-08-08T02:51:22.943721Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x_train (17000, 2, 1, 112, 112)\n",
      "x_test (3000, 2, 1, 112, 112)\n",
      "y_train (17000, 1)\n",
      "y_test (3000, 1)\n"
     ]
    }
   ],
   "source": [
    "print('x_train',x_train.shape)\n",
    "print('x_test',x_test.shape)\n",
    "print('y_train',y_train.shape)\n",
    "print('y_test',y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that, we have successfully generated our data, we build our siamese network. First, we define the base network which is basically a convolutional network used for feature extraction. We build two convolutional layers with rectified linear unit (ReLU) activations and max pooling followed by flat layer."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Preparing the Network"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:22.953285Z",
     "iopub.status.busy": "2024-08-08T02:51:22.952957Z",
     "iopub.status.idle": "2024-08-08T02:51:22.969457Z",
     "shell.execute_reply": "2024-08-08T02:51:22.968236Z",
     "shell.execute_reply.started": "2024-08-08T02:51:22.953234Z"
    }
   },
   "outputs": [],
   "source": [
    "def build_base_network(input_shape):\n",
    "    \n",
    "    seq = Sequential()\n",
    "    \n",
    "    nb_filter = [16, 32, 16]\n",
    "    kernel_size = 3\n",
    "    \n",
    "    \n",
    "    #convolutional layer 1\n",
    "    seq.add(Convolution2D(nb_filter[0], kernel_size, kernel_size, input_shape=input_shape,border_mode='valid', dim_ordering='th'))\n",
    "    seq.add(Activation('relu'))\n",
    "    seq.add(MaxPooling2D(pool_size=(2, 2)))  \n",
    "    seq.add(Dropout(.25))\n",
    "    \n",
    "    #convolutional layer 2\n",
    "    seq.add(Convolution2D(nb_filter[1], kernel_size, kernel_size, border_mode='valid', dim_ordering='th'))\n",
    "    seq.add(Activation('relu'))\n",
    "    seq.add(MaxPooling2D(pool_size=(2, 2), dim_ordering='th')) \n",
    "    seq.add(Dropout(.25))\n",
    "    \n",
    "    #convolutional layer 2\n",
    "    seq.add(Convolution2D(nb_filter[2], kernel_size, kernel_size, border_mode='valid', dim_ordering='th'))\n",
    "    seq.add(Activation('relu'))\n",
    "    seq.add(MaxPooling2D(pool_size=(2, 2), dim_ordering='th')) \n",
    "    seq.add(Dropout(.25))\n",
    "\n",
    "    #flatten \n",
    "    seq.add(Flatten())\n",
    "    seq.add(Dense(128, activation='relu'))\n",
    "    seq.add(Dropout(0.1))\n",
    "    seq.add(Dense(50, activation='relu'))\n",
    "    return seq"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we feed the image pair, to the base network, which will return the embeddings that is, feature vectors:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:22.971299Z",
     "iopub.status.busy": "2024-08-08T02:51:22.970952Z",
     "iopub.status.idle": "2024-08-08T02:51:23.021274Z",
     "shell.execute_reply": "2024-08-08T02:51:23.020195Z",
     "shell.execute_reply.started": "2024-08-08T02:51:22.971247Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "input_dim (1, 112, 112)\n"
     ]
    }
   ],
   "source": [
    "input_dim = x_train.shape[2:]\n",
    "img_a = Input(shape=input_dim)\n",
    "img_b = Input(shape=input_dim)\n",
    "print('input_dim',input_dim)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:23.023484Z",
     "iopub.status.busy": "2024-08-08T02:51:23.023016Z",
     "iopub.status.idle": "2024-08-08T02:51:23.763579Z",
     "shell.execute_reply": "2024-08-08T02:51:23.762497Z",
     "shell.execute_reply.started": "2024-08-08T02:51:23.023407Z"
    }
   },
   "outputs": [],
   "source": [
    "base_network = build_base_network(input_dim)\n",
    "feat_vecs_a = base_network(img_a)\n",
    "feat_vecs_b = base_network(img_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:23.765595Z",
     "iopub.status.busy": "2024-08-08T02:51:23.765196Z",
     "iopub.status.idle": "2024-08-08T02:51:23.780923Z",
     "shell.execute_reply": "2024-08-08T02:51:23.779621Z",
     "shell.execute_reply.started": "2024-08-08T02:51:23.765527Z"
    }
   },
   "outputs": [],
   "source": [
    "distance = Lambda(euclidean_distance, output_shape=eucl_dist_output_shape)([feat_vecs_a, feat_vecs_b])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we set the epoch length to 20 and we use RMS prop for optimization and define our model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:23.783376Z",
     "iopub.status.busy": "2024-08-08T02:51:23.782888Z",
     "iopub.status.idle": "2024-08-08T02:51:23.828942Z",
     "shell.execute_reply": "2024-08-08T02:51:23.827790Z",
     "shell.execute_reply.started": "2024-08-08T02:51:23.783288Z"
    }
   },
   "outputs": [],
   "source": [
    "epochs = 20\n",
    "rms = optimizers.Adam(lr=0.0001, beta_1=0.9, beta_2=0.999, epsilon=None, decay=0.0, amsgrad=False)#RMSprop()\n",
    "rms = RMSprop()\n",
    "\n",
    "earlyStopping = EarlyStopping(monitor='val_loss',\n",
    "                              min_delta=0,\n",
    "                              patience=3,\n",
    "                              verbose=1,\n",
    "                              restore_best_weights=True)\n",
    "callback_early_stop_reduceLROnPlateau=[earlyStopping]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:23.831780Z",
     "iopub.status.busy": "2024-08-08T02:51:23.831162Z",
     "iopub.status.idle": "2024-08-08T02:51:23.875186Z",
     "shell.execute_reply": "2024-08-08T02:51:23.873965Z",
     "shell.execute_reply.started": "2024-08-08T02:51:23.831567Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "__________________________________________________________________________________________________\n",
      "Layer (type)                    Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      "input_1 (InputLayer)            (None, 1, 112, 112)  0                                            \n",
      "__________________________________________________________________________________________________\n",
      "input_2 (InputLayer)            (None, 1, 112, 112)  0                                            \n",
      "__________________________________________________________________________________________________\n",
      "sequential_1 (Sequential)       (None, 50)           652674      input_1[0][0]                    \n",
      "                                                                 input_2[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "lambda_1 (Lambda)               (None, 1)            0           sequential_1[1][0]               \n",
      "                                                                 sequential_1[2][0]               \n",
      "==================================================================================================\n",
      "Total params: 652,674\n",
      "Trainable params: 652,674\n",
      "Non-trainable params: 0\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model = Model(input=[img_a, img_b], output=distance)\n",
    "model.compile(loss=contrastive_loss, optimizer=rms,metrics=[accuracy])\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-08T02:51:23.877804Z",
     "iopub.status.busy": "2024-08-08T02:51:23.877240Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 13600 samples, validate on 3400 samples\n",
      "Epoch 1/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.2752 - accuracy: 0.5299 - val_loss: 0.4035 - val_accuracy: 0.4924\n",
      "Epoch 2/20\n",
      "13600/13600 [==============================] - 312s 23ms/step - loss: 0.2523 - accuracy: 0.5713 - val_loss: 0.4121 - val_accuracy: 0.4924\n",
      "Epoch 3/20\n",
      "13600/13600 [==============================] - 313s 23ms/step - loss: 0.2410 - accuracy: 0.5949 - val_loss: 0.3334 - val_accuracy: 0.5006\n",
      "Epoch 4/20\n",
      "13600/13600 [==============================] - 314s 23ms/step - loss: 0.2233 - accuracy: 0.6359 - val_loss: 0.3064 - val_accuracy: 0.5235\n",
      "Epoch 5/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.2037 - accuracy: 0.6831 - val_loss: 0.2751 - val_accuracy: 0.5391\n",
      "Epoch 6/20\n",
      "13600/13600 [==============================] - 316s 23ms/step - loss: 0.1842 - accuracy: 0.7293 - val_loss: 0.2203 - val_accuracy: 0.6344\n",
      "Epoch 7/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.1655 - accuracy: 0.7682 - val_loss: 0.1806 - val_accuracy: 0.7265\n",
      "Epoch 8/20\n",
      "13600/13600 [==============================] - 317s 23ms/step - loss: 0.1483 - accuracy: 0.7992 - val_loss: 0.1385 - val_accuracy: 0.8182\n",
      "Epoch 9/20\n",
      "13600/13600 [==============================] - 318s 23ms/step - loss: 0.1330 - accuracy: 0.8332 - val_loss: 0.1322 - val_accuracy: 0.8294\n",
      "Epoch 10/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.1170 - accuracy: 0.8590 - val_loss: 0.1160 - val_accuracy: 0.8562\n",
      "Epoch 11/20\n",
      "13600/13600 [==============================] - 316s 23ms/step - loss: 0.1043 - accuracy: 0.8838 - val_loss: 0.1047 - val_accuracy: 0.8676\n",
      "Epoch 12/20\n",
      "13600/13600 [==============================] - 316s 23ms/step - loss: 0.0952 - accuracy: 0.8999 - val_loss: 0.0835 - val_accuracy: 0.9074\n",
      "Epoch 13/20\n",
      "13600/13600 [==============================] - 314s 23ms/step - loss: 0.0876 - accuracy: 0.9126 - val_loss: 0.0766 - val_accuracy: 0.9068\n",
      "Epoch 14/20\n",
      "13600/13600 [==============================] - 313s 23ms/step - loss: 0.0804 - accuracy: 0.9230 - val_loss: 0.0866 - val_accuracy: 0.9047\n",
      "Epoch 15/20\n",
      "13600/13600 [==============================] - 314s 23ms/step - loss: 0.0732 - accuracy: 0.9349 - val_loss: 0.0693 - val_accuracy: 0.9235\n",
      "Epoch 16/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.0688 - accuracy: 0.9387 - val_loss: 0.0610 - val_accuracy: 0.9282\n",
      "Epoch 17/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.0638 - accuracy: 0.9492 - val_loss: 0.0595 - val_accuracy: 0.9265\n",
      "Epoch 18/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.0603 - accuracy: 0.9536 - val_loss: 0.0492 - val_accuracy: 0.9491\n",
      "Epoch 19/20\n",
      "13600/13600 [==============================] - 315s 23ms/step - loss: 0.0562 - accuracy: 0.9588 - val_loss: 0.0443 - val_accuracy: 0.9512\n",
      "Epoch 20/20\n",
      "13600/13600 [==============================] - 314s 23ms/step - loss: 0.0517 - accuracy: 0.9668 - val_loss: 0.0517 - val_accuracy: 0.9509\n",
      "saved\n"
     ]
    }
   ],
   "source": [
    "img_1 = x_train[:, 0]\n",
    "img2 = x_train[:, 1]\n",
    "img_1.shape\n",
    "history = model.fit([img_1, img2], y_train, validation_split=.20,\n",
    "      batch_size= batch_size, verbose=1, nb_epoch=epochs, callbacks=callback_early_stop_reduceLROnPlateau)\n",
    "\n",
    "# Option 1: Save Weights + Architecture\n",
    "model.save_weights('model_weights.h5')\n",
    "with open('model_architecture.json', 'w') as f:\n",
    "    f.write(model.to_json())\n",
    "print('saved')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we make predictions with test data. Finally, we check our model accuracy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy on test set: 91.66%\n"
     ]
    }
   ],
   "source": [
    "pred = model.predict([x_test[:, 0], x_test[:, 1]])\n",
    "\n",
    "print('Accuracy on test set: %0.2f%%' % (100 * compute_accuracy(pred, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* Accuracy on training set: 92.04%\n"
     ]
    }
   ],
   "source": [
    "pred = model.predict([x_train[:, 0], x_train[:, 1]])\n",
    "\n",
    "print('* Accuracy on training set: %0.2f%%' % (100  * compute_accuracy(pred, y_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "acc = history.history['accuracy']\n",
    "val_acc = history.history['val_accuracy']\n",
    "loss = history.history['loss']\n",
    "val_loss = history.history['val_loss']\n",
    "epochs = range(1, len(acc) + 1)\n",
    "#Train and validation accuracy\n",
    "plt.plot(epochs, acc, 'b', label='Training accurarcy')\n",
    "plt.plot(epochs, val_acc, 'r', label='Validation accurarcy')\n",
    "plt.title('Training and Validation accurarcy')\n",
    "plt.legend()\n",
    "\n",
    "plt.figure()\n",
    "#Train and validation loss\n",
    "plt.plot(epochs, loss, 'b', label='Training loss')\n",
    "plt.plot(epochs, val_loss, 'r', label='Validation loss')\n",
    "plt.title('Training and Validation loss')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "selected_image_size 112\n"
     ]
    }
   ],
   "source": [
    "if resize==True:\n",
    "    selected_image_size = int(selected_image_size/2)\n",
    "    print('selected_image_size',selected_image_size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "target_index value :  [1.]\n"
     ]
    }
   ],
   "source": [
    "target_label = 1\n",
    "values = np.array(y_test[:,0])\n",
    "\n",
    "target_index = values.tolist().index(target_label)\n",
    "print(target_index)\n",
    "print('target_index value : ',y_test[target_index])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(112, 112)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img1 = (x_test[target_index, 0] * 255).astype(np.uint8)\n",
    "img1 = img1.reshape(selected_image_size,selected_image_size)\n",
    "print(img1.shape)\n",
    "img1\n",
    "plt.imshow(img1)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(112, 112)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img2 = (x_test[target_index, 1] * 255).astype(np.uint8)\n",
    "img2 = img2.reshape(selected_image_size,selected_image_size)\n",
    "print(img2.shape)\n",
    "img2\n",
    "plt.imshow(img2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 1, 112, 112)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test[target_index:target_index+1, 0].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y_test[target_index]: True  pred : [[ True]]\n"
     ]
    }
   ],
   "source": [
    "pred = model.predict([x_test[target_index:target_index+1, 0], x_test[target_index:target_index+1, 1]])\n",
    "pred = pred < 0.5\n",
    "print('y_test[target_index]:',y_test[target_index,0]==True,' pred :',pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 70909,
     "sourceId": 150545,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 278761,
     "sourceId": 576103,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 28755,
   "isGpuEnabled": true,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
